{
    "name": "RtBasic",
    "scopeName": "source.rtbasic",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#variables"
        },
        {
            "include": "#functions"
        },
        {
            "include": "#structures"
        },
        {
            "include": "#numbers"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.apostrophe.rtbasic",
                    "match": "'.*$"
                },
                {
                    "name": "comment.block.rtbasic",
                    "begin": "/\\*",
                    "end": "\\*/"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.rtbasic",
                    "match": "(?i)\\b(If|Then|Else|ElseIf|End If|For|To|Next|While|Wend|Do|Loop|Until|Exit|Continue|Return)\\b"
                },
                {
                    "name": "keyword.other.rtbasic",
                    "match": "(?i)\\b(Global|Dim|Local|Sub|Structure|End Sub|End Structure|As)\\b"
                },
                {
                    "name": "storage.type.rtbasic",
                    "match": "(?i)\\b(Date|Object|Variant)\\b"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.double.rtbasic",
                    "begin": "\"",
                    "end": "\"",
                    "patterns": [
                        {
                            "name": "constant.character.escape.rtbasic",
                            "match": "\\\\."
                        }
                    ]
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "storage.modifier.global.rtbasic",
                    "match": "(?i)\\b(Global\\s+Dim)\\s+([a-zA-Z_][a-zA-Z0-9_]*)(?:\\s*,\\s*[a-zA-Z_][a-zA-Z0-9_]*)*\\s*(?:\\s+(As)\\s+([a-zA-Z_][a-zA-Z0-9_]*))?\\b",
                    "captures": {
                        "1": { "name": "keyword.other.rtbasic" },
                        "2": { "name": "variable.other.global.rtbasic" },
                        "3": { "name": "keyword.other.rtbasic" },
                        "4": { "name": "entity.name.type.structure.rtbasic" }
                    }
                },
                {
                    "name": "storage.modifier.global.array.rtbasic",
                    "match": "(?i)\\b(Global\\s+Dim)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\((\\d+)\\)(?:\\s+(As)\\s+([a-zA-Z_][a-zA-Z0-9_]*))?\\b",
                    "captures": {
                        "1": { "name": "keyword.other.rtbasic" },
                        "2": { "name": "variable.other.global.rtbasic" },
                        "3": { "name": "constant.numeric.rtbasic" },
                        "4": { "name": "keyword.other.rtbasic" },
                        "5": { "name": "storage.type.rtbasic" }
                    }
                },
                {
                    "name": "storage.modifier.local.rtbasic",
                    "match": "(?i)\\b(Local)\\s+([a-zA-Z_][a-zA-Z0-9_]*)(?:\\s+(As)\\s+([a-zA-Z_][a-zA-Z0-9_]*))?\\b",
                    "captures": {
                        "1": { "name": "keyword.other.rtbasic" },
                        "2": { "name": "variable.other.local.rtbasic" },
                        "3": { "name": "keyword.other.rtbasic" },
                        "4": { "name": "storage.type.rtbasic" }
                    }
                },
                {
                    "name": "storage.modifier.local.array.rtbasic",
                    "match": "(?i)\\b(Local)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\((\\d+)\\)(?:\\s+(As)\\s+([a-zA-Z_][a-zA-Z0-9_]*))?\\b",
                    "captures": {
                        "1": { "name": "keyword.other.rtbasic" },
                        "2": { "name": "variable.other.local.rtbasic" },
                        "3": { "name": "constant.numeric.rtbasic" },
                        "4": { "name": "keyword.other.rtbasic" },
                        "5": { "name": "storage.type.rtbasic" }
                    }
                },
                {
                    "name": "storage.modifier.dim.rtbasic",
                    "match": "(?i)\\b(Dim)\\s+([a-zA-Z_][a-zA-Z0-9_]*)(?:\\s+(As)\\s+([a-zA-Z_][a-zA-Z0-9_]*))?\\b",
                    "captures": {
                        "1": { "name": "keyword.other.rtbasic" },
                        "2": { "name": "variable.other.rtbasic" },
                        "3": { "name": "keyword.other.rtbasic" },
                        "4": { "name": "storage.type.rtbasic" }
                    }
                },
                {
                    "name": "storage.modifier.dim.array.rtbasic",
                    "match": "(?i)\\b(Dim)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\((\\d+)\\)(?:\\s+(As)\\s+([a-zA-Z_][a-zA-Z0-9_]*))?\\b",
                    "captures": {
                        "1": { "name": "keyword.other.rtbasic" },
                        "2": { "name": "variable.other.rtbasic" },
                        "3": { "name": "constant.numeric.rtbasic" },
                        "4": { "name": "keyword.other.rtbasic" },
                        "5": { "name": "storage.type.rtbasic" }
                    }
                }
            ]
        },
        "functions": {
            "patterns": [
                {
                    "name": "meta.function.global.rtbasic",
                    "begin": "(?i)\\b(Global\\s+Sub|Global\\s+Function)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
                    "end": "\\)",
                    "beginCaptures": {
                        "1": { "name": "storage.type.function.rtbasic" },
                        "2": { "name": "entity.name.function.rtbasic" }
                    },
                    "patterns": [
                        {
                            "include": "#parameters"
                        }
                    ]
                },
                {
                    "name": "meta.function.rtbasic",
                    "begin": "(?i)\\b(Sub|Function)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
                    "end": "\\)",
                    "beginCaptures": {
                        "1": { "name": "storage.type.function.rtbasic" },
                        "2": { "name": "entity.name.function.rtbasic" }
                    },
                    "patterns": [
                        {
                            "include": "#parameters"
                        }
                    ]
                }
            ]
        },
        "structures": {
            "patterns": [
                {
                    "name": "meta.structure.rtbasic",
                    "begin": "(?i)\\b(Global\\s+Structure)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\b",
                    "end": "(?i)\\b(End\\s+Structure)\\b",
                    "beginCaptures": {
                        "1": { "name": "storage.type.structure.rtbasic" },
                        "2": { "name": "entity.name.type.structure.rtbasic" }
                    },
                    "endCaptures": {
                        "1": { "name": "storage.type.structure.rtbasic" }
                    },
                    "patterns": [
                        {
                            "include": "#variables"
                        }
                    ]
                }
            ]
        },
        "parameters": {
            "patterns": [
                {
                    "name": "meta.parameter.rtbasic",
                    "match": "(?i)\\b(ByRef|ByVal)?\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s+(As)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\b",
                    "captures": {
                        "1": { "name": "storage.modifier.rtbasic" },
                        "2": { "name": "variable.parameter.rtbasic" },
                        "3": { "name": "keyword.other.rtbasic" },
                        "4": { "name": "storage.type.rtbasic" }
                    }
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.decimal.rtbasic",
                    "match": "\\b\\d+(\\.\\d+)?\\b"
                },
                {
                    "name": "constant.numeric.hex.rtbasic",
                    "match": "\\b&H[0-9A-Fa-f]+\\b"
                }
            ]
        }
    }
}